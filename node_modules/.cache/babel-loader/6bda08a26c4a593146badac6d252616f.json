{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/asso/Desktop/assomatic/assomatic/Projects/30_Comfy-Slot-Store/src/context/filter_context.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useContext, useReducer } from 'react';\nimport reducer from '../reducers/filter_reducer';\nimport { LOAD_PRODUCTS, SET_GRIDVIEW, SET_LISTVIEW, UPDATE_SORT, SORT_PRODUCTS, UPDATE_FILTERS, FILTER_PRODUCTS, CLEAR_FILTERS } from '../actions';\nimport { useProductsContext } from './products_context';\nconst initialState = {\n  filtered_products: [],\n  all_products: [],\n  grid_view: true,\n  sort: 'price-lowest',\n  filters: {\n    text: '',\n    company: 'all',\n    category: 'all',\n    color: 'all',\n    min_price: 0,\n    max_price: 0,\n    price: 0,\n    shipping: false\n  }\n};\nconst FilterContext = /*#__PURE__*/React.createContext();\nexport const FilterProvider = ({\n  children\n}) => {\n  _s();\n\n  const {\n    products\n  } = useProductsContext();\n  const [state, dispatch] = useReducer(reducer, initialState);\n  useEffect(() => {\n    dispatch({\n      type: LOAD_PRODUCTS,\n      payload: products\n    });\n  }, [products]);\n  useEffect(() => {\n    dispatch({\n      type: FILTER_PRODUCTS\n    });\n    dispatch({\n      type: SORT_PRODUCTS\n    });\n  }, [products, state.sort, state.filters]);\n\n  const setGridView = () => {\n    dispatch({\n      type: SET_GRIDVIEW\n    });\n  };\n\n  const setListView = () => {\n    dispatch({\n      type: SET_LISTVIEW\n    });\n  };\n\n  const updateSort = e => {\n    // for demonstration\n    // const name = e.target.name;\n    const value = e.target.value;\n    dispatch({\n      type: UPDATE_SORT,\n      payload: value\n    });\n  };\n\n  const updateFilters = e => {\n    let name = e.target.name;\n    let value = e.target.value;\n\n    if (name === 'category') {\n      value = e.target.textContent;\n    }\n\n    if (name === 'color') {\n      value = e.target.dataset.color;\n    }\n\n    if (name === 'price') {\n      value = Number(value);\n    }\n\n    if (name === 'shipping') {\n      value = e.target.checked;\n    }\n\n    dispatch({\n      type: UPDATE_FILTERS,\n      payload: {\n        name,\n        value\n      }\n    });\n  };\n\n  const clearFilters = () => {\n    dispatch({\n      type: CLEAR_FILTERS\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(FilterContext.Provider, {\n    value: { ...state,\n      setGridView,\n      setListView,\n      updateSort,\n      updateFilters,\n      clearFilters\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n}; // make sure use\n\n_s(FilterProvider, \"8cAveOIhpTlV5n6mdVb22DSUbYQ=\", false, function () {\n  return [useProductsContext];\n});\n\n_c = FilterProvider;\nexport const useFilterContext = () => {\n  _s2();\n\n  return useContext(FilterContext);\n};\n\n_s2(useFilterContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"FilterProvider\");","map":{"version":3,"sources":["/Users/asso/Desktop/assomatic/assomatic/Projects/30_Comfy-Slot-Store/src/context/filter_context.js"],"names":["React","useEffect","useContext","useReducer","reducer","LOAD_PRODUCTS","SET_GRIDVIEW","SET_LISTVIEW","UPDATE_SORT","SORT_PRODUCTS","UPDATE_FILTERS","FILTER_PRODUCTS","CLEAR_FILTERS","useProductsContext","initialState","filtered_products","all_products","grid_view","sort","filters","text","company","category","color","min_price","max_price","price","shipping","FilterContext","createContext","FilterProvider","children","products","state","dispatch","type","payload","setGridView","setListView","updateSort","e","value","target","updateFilters","name","textContent","dataset","Number","checked","clearFilters","useFilterContext"],"mappings":"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","sourcesContent":["import React, { useEffect, useContext, useReducer } from 'react';\nimport reducer from '../reducers/filter_reducer';\nimport {\n  LOAD_PRODUCTS,\n  SET_GRIDVIEW,\n  SET_LISTVIEW,\n  UPDATE_SORT,\n  SORT_PRODUCTS,\n  UPDATE_FILTERS,\n  FILTER_PRODUCTS,\n  CLEAR_FILTERS,\n} from '../actions';\nimport { useProductsContext } from './products_context';\n\nconst initialState = {\n  filtered_products: [],\n  all_products: [],\n  grid_view: true,\n  sort: 'price-lowest',\n  filters: {\n    text: '',\n    company: 'all',\n    category: 'all',\n    color: 'all',\n    min_price: 0,\n    max_price: 0,\n    price: 0,\n    shipping: false,\n  },\n};\n\nconst FilterContext = React.createContext();\n\nexport const FilterProvider = ({ children }) => {\n  const { products } = useProductsContext();\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  useEffect(() => {\n    dispatch({ type: LOAD_PRODUCTS, payload: products });\n  }, [products]);\n  useEffect(() => {\n    dispatch({ type: FILTER_PRODUCTS });\n    dispatch({ type: SORT_PRODUCTS });\n  }, [products, state.sort, state.filters]);\n\n  const setGridView = () => {\n    dispatch({ type: SET_GRIDVIEW });\n  };\n  const setListView = () => {\n    dispatch({ type: SET_LISTVIEW });\n  };\n  const updateSort = (e) => {\n    // for demonstration\n    // const name = e.target.name;\n    const value = e.target.value;\n    dispatch({ type: UPDATE_SORT, payload: value });\n  };\n  const updateFilters = (e) => {\n    let name = e.target.name;\n    let value = e.target.value;\n    if (name === 'category') {\n      value = e.target.textContent;\n    }\n    if (name === 'color') {\n      value = e.target.dataset.color;\n    }\n    if (name === 'price') {\n      value = Number(value);\n    }\n    if (name === 'shipping') {\n      value = e.target.checked;\n    }\n    dispatch({ type: UPDATE_FILTERS, payload: { name, value } });\n  };\n  const clearFilters = () => {\n    dispatch({ type: CLEAR_FILTERS });\n  };\n\n  return (\n    <FilterContext.Provider\n      value={{\n        ...state,\n        setGridView,\n        setListView,\n        updateSort,\n        updateFilters,\n        clearFilters,\n      }}\n    >\n      {children}\n    </FilterContext.Provider>\n  );\n};\n// make sure use\nexport const useFilterContext = () => {\n  return useContext(FilterContext);\n};\n"]},"metadata":{},"sourceType":"module"}